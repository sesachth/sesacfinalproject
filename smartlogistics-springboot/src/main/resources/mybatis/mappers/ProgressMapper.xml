<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="app.labs.dao.ProgressDao">

    <resultMap id="progressResultMap" type="app.labs.model.ProgressDTO">
        <id property="orderId" column="order_id"/>
        <result property="orderNum" column="order_num"/>
        <result property="orderTime" column="order_time"/>
        <result property="destination" column="destination"/>
        <result property="palletId" column="pallet_id"/>
        <result property="boxState" column="box_state"/>
        <result property="progressState" column="progress_state"/>
        <result property="productName" column="name"/>
        <result property="productCategory" column="category"/>
        <result property="boxSpec" column="boxSpec" javaType="java.lang.Integer"/>  <!-- ✅ 수정 -->
		<result property="isFragile" column="is_fragile" javaType="Boolean"/>  <!-- ✅ Boolean으로 변경 -->
    </resultMap>

    <resultMap id="orderResultMap" type="app.labs.model.Order">
        <id property="orderId" column="order_id" />
        <result property="orderNum" column="order_num" />
        <result property="orderTime" column="order_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="destination" column="destination" />
        <result property="boxState" column="box_state" />
        <result property="progressState" column="progress_state" />
        <result property="productId" column="product_id" />
        <result property="palletId" column="pallet_id" />
    </resultMap>

    <!-- ✅ 진행 상태 리스트 조회 (기본적으로 오늘 날짜 기준) -->
	<select id="getFilteredProgressList" resultMap="progressResultMap">
	    SELECT o.order_id, o.order_num, o.order_time, o.destination, o.pallet_id, 
	           o.box_state, o.progress_state, p.name, p.category, p.spec AS boxSpec,
	           o.seq_stacking,
	           CASE WHEN p.is_fragile = 1 THEN 1 ELSE 0 END AS is_fragile
	    FROM `order` o
	    LEFT JOIN `product` p ON o.product_id = p.product_id
	    WHERE DATE(o.order_time) = COALESCE(#{date}, CURDATE())  <!-- 기본값: 오늘 날짜 -->
	    <if test="camp != null and camp != ''">
	        AND o.destination = #{camp}
	    </if>
	    <if test="orderNum != null and orderNum != ''">
	        AND o.order_num = #{orderNum}
	    </if>
	    <if test="boxSpec != null">
	        AND p.spec = #{boxSpec}
	    </if>
	    <if test="boxState != null">
	        AND o.box_state = #{boxState}
	    </if>
	    <if test="progressState != null">
	        AND o.progress_state = #{progressState}
	    </if>
	    ORDER BY 
	        CASE 
	            WHEN o.pallet_id IS NULL THEN 1  <!-- ✅ NULL인 `pallet_id`는 가장 뒤로 정렬 -->
	            ELSE 0 
	        END,
	        o.pallet_id ASC,     <!-- ✅ `pallet_id` 오름차순 정렬 -->
	        CASE 
	            WHEN o.seq_stacking IS NULL THEN 1  <!-- ✅ NULL 값은 가장 뒤로 정렬 -->
	            ELSE 0 
	        END,
	        o.seq_stacking ASC,  <!-- ✅ 같은 `pallet_id` 내에서 `seq_stacking` 기준 정렬 -->
	        o.order_time ASC  <!-- ✅ 동일한 `seq_stacking`일 경우 시간순 정렬 -->
	    LIMIT #{pageSize} OFFSET #{offset};
	</select>


    <!-- ✅ 오늘 날짜의 진행 상태 개수 조회 -->
    <select id="getTotalFilteredRecords" resultType="int">
        SELECT COUNT(*)
        FROM `order` o
        LEFT JOIN `product` p ON o.product_id = p.product_id
        WHERE DATE(o.order_time) = COALESCE(#{date}, CURDATE())  <!-- ✅ 기본값: 오늘 날짜 -->
        <if test="camp != null and camp != ''">
            AND o.destination = #{camp}
        </if>
        <if test="orderNum != null and orderNum != ''">
            AND o.order_num = #{orderNum}
        </if>
        <if test="boxSpec != null">
            AND p.spec = #{boxSpec}
        </if>
        <if test="boxState != null">
            AND o.box_state = #{boxState}
        </if>
        <if test="progressState != null">
            AND o.progress_state = #{progressState}
        </if>
    </select>

    <!-- ✅ 진행 상태 및 이미지 번호 업데이트 (NULL 허용) -->
    <update id="updateOrdersProgress">
        UPDATE `order`
        SET 
            progress_state = #{progressState}, 
            image_number = #{imageNumber, jdbcType=INTEGER}
        WHERE order_id IN 
        <foreach item="orderId" collection="orderIds" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </update>

    <!-- ✅ 진행 상태가 있는 주문 조회 (오늘 날짜만) -->
    <select id="getOrdersInProgress" resultMap="orderResultMap">
	    SELECT * FROM `order`
	    WHERE progress_state > 0  <!-- ✅ 진행 상태가 있는 주문만 조회 -->
	    AND DATE(order_time) = CURDATE()  <!-- ✅ 오늘 날짜 주문만 조회 -->
	    ORDER BY order_time ASC, order_id ASC;
	</select>


</mapper>
