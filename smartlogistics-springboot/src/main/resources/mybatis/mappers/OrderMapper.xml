<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="smartlogistics.OrderMapper">

    <!-- ✅ 현재 가장 큰 orderId 가져오기 -->
    <select id="getMaxOrderId" resultType="java.lang.Long">
        SELECT COALESCE(MAX(orderId), 0) FROM `order`;
    </select>

    <!-- ✅ 랜덤 상품 가져오기 -->
    <select id="getRandomProduct" resultType="app.labs.model.Product">
        SELECT * FROM product ORDER BY RAND() LIMIT 1;
    </select>

    <!-- ✅ 전체 주문 조회 -->
    <select id="getAllOrders" resultType="app.labs.model.Order">
        SELECT * FROM `order` ORDER BY orderTime DESC;
    </select>

    <!-- ✅ 특정 목적지의 주문 조회 -->
    <select id="getOrdersByDestination" resultType="app.labs.model.Order">
        SELECT * FROM `order`
        WHERE destination = #{destination}
        ORDER BY orderTime DESC;
    </select>

    <!-- ✅ 특정 날짜 범위의 주문 조회 -->
    <select id="getOrdersByDate" resultType="app.labs.model.Order">
        SELECT * FROM `order`
        WHERE orderTime BETWEEN #{startOfDay} AND #{endOfDay}
        ORDER BY orderTime DESC;
    </select>

    <!-- ✅ 특정 목적지 & 날짜 범위의 주문 조회 -->
    <select id="getOrdersByDestinationAndDate" resultType="app.labs.model.Order">
        SELECT * FROM `order`
        WHERE destination = #{destination}
        AND orderTime BETWEEN #{startOfDay} AND #{endOfDay}
        ORDER BY orderTime DESC;
    </select>

    <!-- ✅ 주문 저장 -->
    <insert id="insertOrder">
        INSERT INTO `order` (orderId, orderNum, orderTime, destination, state, productId, palletId)
        VALUES (#{orderId}, #{orderNum}, #{orderTime}, #{destination}, #{state}, #{productId}, #{palletId});
    </insert>

</mapper>
