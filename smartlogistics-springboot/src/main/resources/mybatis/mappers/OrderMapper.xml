<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis.mappers.OrderMapper">

    <!-- ✅ 기존 주문 삭제 -->
    <delete id="clearOrders">
        DELETE FROM `order`;
    </delete>

    <!-- ✅ 현재 가장 큰 orderId 가져오기 -->
    <select id="getMaxOrderId" resultType="java.lang.Long">
        SELECT MAX(orderId) FROM `order`;
    </select>

    <!-- ✅ 모든 상품 가져오기 -->
    <!-- <select id="getAllProducts" resultType="app.labs.dao.OrderProduct">  임시 처리 -->
    <select id="getAllProducts" resultType="app.labs.model.Product">
        SELECT * FROM product;
    </select>

    <!-- ✅ 주문 저장 -->
    <insert id="insertOrder">
        INSERT INTO `order` (orderId, orderNum, orderTime, destination, state, product_productId)
        VALUES (#{orderId}, #{orderNum}, #{orderTime}, #{destination}, #{state}, #{productProductId});
    </insert>

    <!-- ✅ 전체 주문 조회 (이 부분이 빠져있을 가능성 있음) -->
    <!-- <select id="getAllOrders" resultType="app.labs.dao.Order"> 임시 처리 -->
    <select id="getAllOrders" resultType="app.labs.model.Order">
        SELECT * FROM `order`;
    </select>

    <!-- ✅ 특정 날짜의 주문 조회 -->
    <!-- <select id="getOrdersByDate" resultType="app.labs.dao.Order"> 임시 처리 -->
    <select id="getOrdersByDate" resultType="app.labs.model.Order">
        SELECT * FROM `order` WHERE DATE(orderTime) = #{date};
    </select>

    <!-- ✅ 목적지 & 날짜 기반 주문 조회 -->
    <!-- <select id="getOrdersByDestinationAndDate" resultType="app.labs.dao.Order"> 임시 처리 -->
    <select id="getOrdersByDestinationAndDate" resultType="app.labs.model.Order">
        SELECT * FROM `order` WHERE destination = #{destination} AND DATE(orderTime) = #{date};
    </select>

    <!-- ✅ 목적지 기반 주문 조회 -->
    <!-- <select id="getOrdersByDestination" resultType="app.labs.dao.Order"> 임시 처리 -->
    <select id="getOrdersByDestination" resultType="app.labs.model.Order">
        SELECT * FROM `order` WHERE destination = #{destination};
    </select>

</mapper>